{"uid":"9aa9f6a7e870100b","name":"test_logins[result0]","fullName":"testcase.login.test_login.TestLogin#test_logins","historyId":"03bf8f5f437b1b604ffe513820211922","time":{"start":1720445780123,"stop":1720445780352,"duration":229},"status":"broken","statusMessage":"TypeError: a bytes-like object is required, not 'Response'","statusTrace":"self = <testcase.login.test_login.TestLogin object at 0x105324650>\nresult = {'aver': None, 'headers': {'Content-Type': 'application/json'}, 'json': {'clientId': 0, 'phone': 16688888888, 'systemId': 0, 'verificationCode': 1111}, 'method': 'POST', ...}\n\n    @allure.story(\"登录测试用例\")\n    @pytest.mark.parametrize(\"result\", ReadYamlUtils.read_yaml(file_paths['login_yaml']))\n    def test_logins(self, result):\n        #\n        res = RequestsUtils.auto_request(method=result['method'], url=bash_host + result['url'], json=result['json'])\n        logs.error(\"接口%s\" % {str(res.json())})\n        # 获取token\n        print(res.headers)\n        print(res.raw)\n        login_token = res.json()[\"data\"][\"token\"]\n        print(res.json()[\"data\"][\"token\"])\n        # 把token写入data.yaml 这边也要把写入方法抽取出来\n        ReadYamlUtils.write_token_to_yaml(filepath=\"/Users/yang/Documents/pySpace8/data/data.yaml\",\n                                          token={\"token\": login_token})\n>       allure.attach(res)\n\ntestcase/login/test_login.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/_allure.py:200: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_pytest/listener.py:252: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/reporter.py:165: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <allure_commons.logger.AllureFileLogger object at 0x1040df5f0>\nbody = <Response [200]>\nfile_name = '388ead06-ec2b-44bd-891c-eda4d5e384b3-attachment.attach'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = self._report_dir / file_name\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, str):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'Response'\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/logger.py:48: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TypeError: a bytes-like object is required, not 'Response'","statusTrace":"self = <testcase.login.test_login.TestLogin object at 0x105324650>\nresult = {'aver': None, 'headers': {'Content-Type': 'application/json'}, 'json': {'clientId': 0, 'phone': 16688888888, 'systemId': 0, 'verificationCode': 1111}, 'method': 'POST', ...}\n\n    @allure.story(\"登录测试用例\")\n    @pytest.mark.parametrize(\"result\", ReadYamlUtils.read_yaml(file_paths['login_yaml']))\n    def test_logins(self, result):\n        #\n        res = RequestsUtils.auto_request(method=result['method'], url=bash_host + result['url'], json=result['json'])\n        logs.error(\"接口%s\" % {str(res.json())})\n        # 获取token\n        print(res.headers)\n        print(res.raw)\n        login_token = res.json()[\"data\"][\"token\"]\n        print(res.json()[\"data\"][\"token\"])\n        # 把token写入data.yaml 这边也要把写入方法抽取出来\n        ReadYamlUtils.write_token_to_yaml(filepath=\"/Users/yang/Documents/pySpace8/data/data.yaml\",\n                                          token={\"token\": login_token})\n>       allure.attach(res)\n\ntestcase/login/test_login.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/_allure.py:200: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_pytest/listener.py:252: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/reporter.py:165: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <allure_commons.logger.AllureFileLogger object at 0x1040df5f0>\nbody = <Response [200]>\nfile_name = '388ead06-ec2b-44bd-891c-eda4d5e384b3-attachment.attach'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = self._report_dir / file_name\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, str):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'Response'\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/logger.py:48: TypeError","steps":[],"attachments":[{"uid":"9133ba630772594a","name":"388ead06-ec2b-44bd-891c-eda4d5e384b3-attachment.attach","source":"9133ba630772594a.attach","type":"application/octet-stream","size":0},{"uid":"705fde5174ffaf63","name":"log","source":"705fde5174ffaf63.txt","type":"text/plain","size":713}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"登录测试用例"},{"name":"parentSuite","value":"testcase.login"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"YangdeMacBook-Pro.local"},{"name":"thread","value":"81642-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.login.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"result","value":"{'name': '登录接口请求', 'method': 'POST', 'json': {'clientId': 0, 'phone': 16688888888, 'systemId': 0, 'verificationCode': 1111}, 'url': '/uc/user/login', 'headers': {'Content-Type': 'application/json'}, 'aver': None}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"9aa9f6a7e870100b.json","parameterValues":["{'name': '登录接口请求', 'method': 'POST', 'json': {'clientId': 0, 'phone': 16688888888, 'systemId': 0, 'verificationCode': 1111}, 'url': '/uc/user/login', 'headers': {'Content-Type': 'application/json'}, 'aver': None}"]}