{"name": "test_carts2[result0]", "status": "broken", "statusDetails": {"message": "KeyError: 'data.yaml'", "trace": "self = <testcase.carts.test_carts.TestCarts object at 0x10a2475f0>\nresult = {'extract': {'message': '\"message\":\"(.+?)\"'}, 'headers': {'Authorization': '${read_data_yaml(token)}', 'Content-type': 'application/x-www-form-urlencoded'}, 'method': 'GET', 'name': '购物车接口请求', ...}\n\n    @pytest.mark.parametrize(\"result\",\n                             ReadYamlUtils.read_yaml(file_paths[\"carts_yaml\"]))\n    def test_carts2(self, result):\n        data = file_paths[\"carts_yaml\"]\n        req = RequestsUtils.real_request(request_yaml=result)\n        print(req.text)\n>       ReplaceUtils.replace_yaml_by_extract(response_data=req.text, yaml_path=data, replace_value=\"message\")\n\ntest_carts.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'utils.Replace_yaml_utils.ReplaceUtils'>\nyaml_path = '/Users/yang/Documents/pySpace8/testcase/carts/carts.yaml'\nresponse_data = '{\"code\":\"SUCCESS\",\"message\":\"操作成功\",\"traceId\":\"\",\"data\":[{\"id\":1003,\"userId\":1389,\"productId\":113,\"productName\":\"ikbc8...roductSku\":{\"skuId\":349,\"attributeSymbolList\":\"\",\"name\":\"\",\"sellPrice\":330.00,\"stock\":0},\"number\":0,\"productType\":1}]}'\nreplace_value = 'message', replace_key = 'extract'\n\n    @classmethod\n    def replace_yaml_by_extract(cls, yaml_path, response_data=None, replace_value=None, replace_key=\"extract\"):\n        \"\"\"\n        传入yaml地址、需要替换的关键字，默认为\"extract\"，replace_value为提取的正则\n        :param response_data: 响应体用于提取\n        :param yaml_path: 传入yaml地址\n        :param replace_key: 需要提取的关键字，默认为\"extract\"\n        :param replace_value: replace_value为提取的正则 默认none\n        :return:\n        \"\"\"\n        with open(yaml_path, \"r\", encoding=\"utf-8\") as f:\n            yaml_data = yaml.safe_load(f)\n            for dict_yaml in yaml_data:\n                if replace_key in dict_yaml and replace_value is not None:\n                    # 取出traceid\n                    re_keyword = dict_yaml[replace_key][replace_value]\n                else:\n                    re_keyword = dict_yaml[replace_key]\n                re_data = (re.search(re_keyword, response_data)).group()\n>               print(file_paths[\"data.yaml\"])\nE               KeyError: 'data.yaml'\n\n../../utils/Replace_yaml_utils.py:93: KeyError"}, "parameters": [{"name": "result", "value": "{'name': '购物车接口请求', 'method': 'GET', 'url': '/mall/product/shoppingCart', 'time': '${get_time()}', 'headers': {'Content-type': 'application/x-www-form-urlencoded', 'Authorization': '${read_data_yaml(token)}'}, 'extract': {'message': '\"message\":\"(.+?)\"'}}"}], "start": 1720946817829, "stop": 1720946818053, "uuid": "e74d8270-df48-4278-ae2f-1a706047186d", "historyId": "b017f6dacb5abe3cc8c8628439b7a7b8", "testCaseId": "4e1be11229c527cf2915e3d71ca7e81c", "fullName": "testcase.carts.test_carts.TestCarts#test_carts2", "labels": [{"name": "parentSuite", "value": "testcase.carts"}, {"name": "suite", "value": "test_carts"}, {"name": "subSuite", "value": "TestCarts"}, {"name": "host", "value": "YangdeMacBook-Pro.local"}, {"name": "thread", "value": "85364-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.carts.test_carts"}]}